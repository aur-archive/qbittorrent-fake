diff -Naur qbittorrent-2.8.4/src/preferences/preferences.h qbittorrent-2.8.4-rutracker/src/preferences/preferences.h
--- qbittorrent-2.8.4/src/preferences/preferences.h	2011-08-09 20:25:33.000000000 +0300
+++ qbittorrent-2.8.4-rutracker/src/preferences/preferences.h	2011-08-20 11:05:36.749553996 +0300
@@ -939,7 +939,8 @@
   }
 
   bool trackerExchangeEnabled() const {
-    return value(QString::fromUtf8("Preferences/Advanced/TrackerExchange"), true).toBool();
+//    return value(QString::fromUtf8("Preferences/Advanced/TrackerExchange"), true).toBool();
+    return false;
   }
 
   void setTrackerExchangeEnabled(bool enable) {
diff -Naur qbittorrent-2.8.4/src/qtlibtorrent/qbtsession.cpp qbittorrent-2.8.4-rutracker/src/qtlibtorrent/qbtsession.cpp
--- qbittorrent-2.8.4/src/qtlibtorrent/qbtsession.cpp	2011-08-09 20:25:33.000000000 +0300
+++ qbittorrent-2.8.4-rutracker/src/qtlibtorrent/qbtsession.cpp	2011-08-20 11:07:35.129553998 +0300
@@ -109,11 +109,8 @@
   boost::filesystem::path::default_name_check(boost::filesystem::no_check);
   // Creating Bittorrent session
   QList<int> version;
-  version << VERSION_MAJOR;
-  version << VERSION_MINOR;
-  version << VERSION_BUGFIX;
-  version << 0;
-  const QString peer_id = "qB";
+  version << 2 << 2 << 1 << 0;
+  const QString peer_id = "UT";
   // Construct session
   s = new session(fingerprint(peer_id.toLocal8Bit().constData(), version.at(0), version.at(1), version.at(2), version.at(3)), 0);
   std::cout << "Peer ID: " << fingerprint(peer_id.toLocal8Bit().constData(), version.at(0), version.at(1), version.at(2), version.at(3)).to_string() << std::endl;
@@ -379,7 +376,7 @@
   }
   // * Session settings
   session_settings sessionSettings = s->settings();
-  sessionSettings.user_agent = "qBittorrent "VERSION;
+  sessionSettings.user_agent = "uTorrent/2210(25302)";
   std::cout << "HTTP user agent is " << sessionSettings.user_agent << std::endl;
   addConsoleMessage(tr("HTTP user agent is %1").arg(misc::toQString(sessionSettings.user_agent)));
 
@@ -392,9 +389,9 @@
   //sessionSettings.announce_to_all_trackers = true;
   sessionSettings.auto_scrape_interval = 1200; // 20 minutes
 #if LIBTORRENT_VERSION_MINOR > 14
-  // Comply with the multi-tracker specification
-  sessionSettings.announce_to_all_trackers = false;
-  sessionSettings.announce_to_all_tiers = false;
+  // do not Comply with the multi-tracker specification, but comply with cruel reality and retrackers
+  sessionSettings.announce_to_all_trackers = true;
+  sessionSettings.announce_to_all_tiers = true;
   sessionSettings.auto_scrape_min_interval = 900; // 15 minutes
 #endif
   sessionSettings.cache_size = pref.diskCacheSize()*64;

